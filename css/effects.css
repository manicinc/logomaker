/* css/effects.css */
/* FIXED - v1.2 - Removed Excessive !important */
/*
 * Sections:
 * 1. Base Setup & CSS Variables Usage
 * 2. Font Styling Classes (Family, Weight, Case)
 * 3. Text Alignment Classes
 * 4. Text Effects (Shadows, Glows, Blends - via text-effect-* classes)
 * 5. Border Styles (Static - via border-style-* classes)
 * 6. Border Effects (Dynamic - via border-effect-* classes)
 * 7. Text Animations (Movement, Fades, Glitches - via anim-* classes)
 * 8. Background Patterns & Effects (via bg-* classes)
 * 9. Responsive & Accessibility Overrides (Kept !important here)
 */

/* --- 1. Base Setup & CSS Variables Usage --- */

/* Apply CSS variables set by JS to the logo text */
/* REMOVED !important - Rely on specificity/cascade order */
.logo-text {
  font-size: var(--dynamic-font-size, 100px);
  letter-spacing: var(--dynamic-letter-spacing, 0.03em);
  transform: rotate(var(--dynamic-rotation, 0deg));
  /* Base transitions */
  transition: color var(--transition-duration-fast, 0.2s),
              text-shadow var(--transition-duration-base, 0.3s),
              opacity var(--transition-duration-base, 0.3s),
              transform var(--transition-duration-base, 0.3s),
              font-weight var(--transition-duration-fast, 0.2s), /* Smooth weight change */
              font-family var(--transition-duration-fast, 0.2s); /* Smooth font change */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transform-style: preserve-3d;
  backface-visibility: hidden;
  position: relative;
  z-index: 1;
  background-clip: text; /* Required for gradient text */
  -webkit-background-clip: text; /* Required for gradient text */
  /* Other base styles applied by layout.css or JS */
}

/* Base for border effects - Applied to .logo-container */
/* REMOVED !important from width/color - Rely on specificity/cascade */
.dynamic-border {
  border-width: var(--dynamic-border-width, 2px); /* Use var */
  border-color: var(--dynamic-border-color, #ffffff); /* Use var */
  /* border-style applied by specific classes */
  transition: border var(--transition-duration-fast, 0.2s),
              box-shadow var(--transition-duration-base, 0.3s);
  background-clip: padding-box !important; /* KEPT !important - Often needed for border effects. Test removing later if desired. */
  position: relative; /* Needed for pseudo-elements in effects */
  z-index: 0; /* Ensure border effects are behind text */
}

/* Animation duration variable (Ensure :root definition exists in variables.css or is set by JS) */
/* Example :root { --animation-duration: 2s; } */
/* Apply to elements with anim-* class */
[class*="anim-"] {
  animation-duration: var(--animation-duration, 2s); /* Use CSS var set by JS */
  animation-timing-function: var(--transition-timing-function, ease);
  animation-iteration-count: infinite;
  /* animation-name is set by specific .anim-* class */
}

/* --- 2. Font Styling Classes --- */

/* Add rules for ALL sanitized font names used in your dropdown */
/* These classes are added/removed by SettingsManager._applyFontFamily */
/* Example: If dropdown has "Orbitron", JS adds "font-family-orbitron" */
/* REMOVED !important */
.font-family-orbitron { font-family: "Orbitron", sans-serif; }
.font-family-arial { font-family: Arial, sans-serif; }
.font-family-russoone { font-family: "Russo One", sans-serif; }
.font-family-aachenstd { font-family: "AachenStd", serif; } /* Example, ensure name matches */
.font-family-palacescriptmtstd { font-family: "PalaceScriptMtStd", cursive; } /* Example */
.font-family-pressstart2p { font-family: "Press Start 2P", cursive; } /* Example */
/* ... etc for all ~400 fonts defined in fontManager/CSS ... */
.font-family-fallback { font-family: Arial, sans-serif; } /* Fallback */

/* Font Weight Classes - Applied by SettingsManager._applyFontWeight */
/* REMOVED !important */
.font-weight-100 { font-weight: 100; }
.font-weight-200 { font-weight: 200; }
.font-weight-300 { font-weight: 300; }
.font-weight-400 { font-weight: 400; } /* Normal */
.font-weight-500 { font-weight: 500; }
.font-weight-600 { font-weight: 600; }
.font-weight-700 { font-weight: 700; } /* Bold */
.font-weight-800 { font-weight: 800; }
.font-weight-900 { font-weight: 900; }
.font-weight-950 { font-weight: 950; } /* Extra Black, if font supports */

/* Text Case Classes - Applied by SettingsManager._applyTextCase */
/* REMOVED !important */
.text-case-none { text-transform: none; }
.text-case-uppercase { text-transform: uppercase; }
.text-case-lowercase { text-transform: lowercase; }
.text-case-capitalize { text-transform: capitalize; }

/* --- 3. Text Alignment Classes --- */
/* Applied by SettingsManager._applyTextAlign */
/* REMOVED !important - Ensure these don't conflict with components.css */
.text-align-left { text-align: left; }
.text-align-center { text-align: center; }
.text-align-right { text-align: right; }
/* .text-align-justify { text-align: justify; } */ /* Justify might look odd for logos */


/* ============================================================= */
/* == 4. Text Effects (Shadows, Glows - using text-effect-*) Â == */
/* ============================================================= */
/* Applied by SettingsManager._applyTextEffect based on mapping */

/* REMOVED !important */
.text-effect-none { text-shadow: none; mix-blend-mode: normal; }

/* --- Glows --- */
/* Mapped from 'text-glow-soft', 'text-glow-medium', etc. in JS */
.text-effect-glow-soft {
  text-shadow: 0 0 10px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.7),
               0 0 15px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.4);
}
.text-effect-glow-medium {
  text-shadow: 0 0 6px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.9),
               0 0 18px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.6);
}
.text-effect-glow-strong { /* Styles from old .text-glow-strong */
  text-shadow: 0 0 5px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 1),
               0 0 12px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.8),
               0 0 25px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.6);
}
.text-effect-glow-sharp { /* Styles from old .text-glow-sharp */
  text-shadow: 0 0 1px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 1),
               0 0 3px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.8);
}

/* --- Neon Glows (Mapped from JS, e.g., 'text-glow-neon') --- */
/* Using --dynamic-border-color and --primary-color */
/* Assumes --primary-color-rgb is defined or derived */
.text-effect-neon-primary { /* Styles from old .text-glow-neon-primary */
  text-shadow:
    0 0 5px var(--dynamic-border-color, #0ff), /* Inner core using dynamic color */
    0 0 10px var(--dynamic-border-color, #0ff),
    0 0 20px rgba(var(--primary-color-rgb, 255, 20, 147), 0.8), /* Outer bloom using primary color */
    0 0 35px rgba(var(--primary-color-rgb, 255, 20, 147), 0.6),
    0 0 50px rgba(var(--primary-color-rgb, 255, 20, 147), 0.4);
}
/* Add other specific neon classes if needed and mapped in JS (e.g., text-effect-neon-accent) */
/* Example for accent: */
/* .text-effect-neon-accent { ... using --accent-color-rgb ... } */

/* --- Shadows (Mapped from JS, e.g., 'text-glow-hard') --- */
/* Soft Shadows (Example: if dropdown had 'text-shadow-soft-md', map it) */
.text-effect-shadow-soft-md { /* Styles from old .text-shadow-drop-soft-md */
  text-shadow: 0 4px 8px rgba(0,0,0,0.35);
}
/* Add other soft shadow variations if needed and mapped in JS */

/* Hard Shadows (Example: mapping 'text-glow-hard' -> text-effect-shadow-hard-md) */
.text-effect-shadow-hard-sm { /* Styles from old .text-shadow-drop-hard-sm */
  text-shadow: 1px 1px 0px var(--dynamic-border-color, #ffffff);
}
.text-effect-shadow-hard-md { /* Styles from old .text-shadow-drop-hard-md */
  text-shadow: 2px 2px 0px var(--dynamic-border-color, #ffffff);
}
.text-effect-shadow-hard-lg { /* Styles from old .text-shadow-drop-hard-lg */
  text-shadow: 3px 3px 0px var(--dynamic-border-color, #ffffff);
}
.text-effect-shadow-hard-xl { /* Styles from old .text-shadow-drop-hard-xl */
  text-shadow: 5px 5px 0px var(--dynamic-border-color, #ffffff);
}
/* Add other hard shadow variations if needed and mapped in JS */

/* --- Outline (Mapped from JS, e.g., 'text-glow-outline') --- */
.text-effect-outline-thin { /* Styles from old .text-shadow-outline-thin */
  text-shadow:
    -1px -1px 0 var(--dynamic-border-color, #ffffff),
     1px -1px 0 var(--dynamic-border-color, #ffffff),
    -1px  1px 0 var(--dynamic-border-color, #ffffff),
     1px  1px 0 var(--dynamic-border-color, #ffffff);
}
.text-effect-outline-thick { /* Styles from old .text-shadow-outline-thick */
  text-shadow:
    -1px -1px 0 var(--dynamic-border-color, #ffffff), 1px -1px 0 var(--dynamic-border-color, #ffffff),
    -1px 1px 0 var(--dynamic-border-color, #ffffff), 1px 1px 0 var(--dynamic-border-color, #ffffff),
    -2px -2px 0 var(--dynamic-border-color, #ffffff), 2px -2px 0 var(--dynamic-border-color, #ffffff),
    -2px 2px 0 var(--dynamic-border-color, #ffffff), 2px 2px 0 var(--dynamic-border-color, #ffffff),
    0 0 5px rgba(0,0,0,0.2); /* Optional soft shadow behind outline */
}

/* --- Retro (Mapped from JS, e.g., 'text-glow-retro') --- */
/* Assumes --primary-color and --secondary-color variables exist */
.text-effect-shadow-retro { /* Styles from old .text-shadow-multi-layer-retro */
  text-shadow:
    3px 3px 0px var(--secondary-color, #8A2BE2), /* Use CSS Variables */
    6px 6px 0px var(--primary-color, #FF1493),
    9px 9px 5px rgba(0,0,0,0.2);
}

/* --- Emboss/Inset (Mapped from JS, e.g., 'text-glow-emboss') --- */
.text-effect-emboss { /* Styles from old .text-shadow-emboss */
  text-shadow: -1px -1px 1px rgba(0, 0, 0, 0.6),
                1px  1px 1px rgba(255, 255, 255, 0.15);
}
.text-effect-inset { /* Styles from old .text-shadow-inset */
  text-shadow:  1px  1px 1px rgba(0, 0, 0, 0.6),
               -1px -1px 1px rgba(255, 255, 255, 0.15);
}

/* --- Blend Modes --- */
/* These likely don't need mapping, apply directly if selected */
/* REMOVED !important */
.text-effect-blend-screen { mix-blend-mode: screen; color: #eee; }
.text-effect-blend-multiply { mix-blend-mode: multiply; color: #333; }
.text-effect-blend-overlay { mix-blend-mode: overlay; }
.text-effect-blend-difference { mix-blend-mode: difference; color: #fff; }
/* Add other blend modes if needed */


/* ========================================================= */
/* == 5. Border Styles (Static - using border-style-*) Â  Â == */
/* ========================================================= */
/* Applied to .logo-container when .dynamic-border is present */
/* Driven by SettingsManager._applyBorderStyle mapping */
/* REMOVED !important */

.dynamic-border.border-style-none { border-style: none; box-shadow: none; } /* Ensure box-shadow is also removed */
.dynamic-border.border-style-solid { border-style: solid; }
.dynamic-border.border-style-double {
  border-style: double;
  /* Adjust width if needed, old CSS used * 2.5 */
  border-width: calc(var(--dynamic-border-width, 2px) * 2.5);
}
.dynamic-border.border-style-dashed { border-style: dashed; }
.dynamic-border.border-style-dotted { border-style: dotted; }
.dynamic-border.border-style-groove {
  border-style: groove;
  /* Old CSS used * 2 */
  border-width: calc(var(--dynamic-border-width, 2px) * 2);
}
.dynamic-border.border-style-ridge {
  border-style: ridge;
  /* Old CSS used * 2 */
  border-width: calc(var(--dynamic-border-width, 2px) * 2);
}
.dynamic-border.border-style-inset {
  border-style: inset;
  /* Old CSS used * 2 */
  border-width: calc(var(--dynamic-border-width, 2px) * 2);
}
.dynamic-border.border-style-outset {
  border-style: outset;
  /* Old CSS used * 2 */
  border-width: calc(var(--dynamic-border-width, 2px) * 2);
}
.dynamic-border.border-style-thick { /* Mapped from old 'border-thick' */
  border-style: solid;
  /* Old CSS used * 2 */
  border-width: calc(var(--dynamic-border-width, 2px) * 2);
}
.dynamic-border.border-style-pixel { /* Styles from old .border-pixel */
  border-width: calc(var(--dynamic-border-width, 2px) + 3px); /* Adjust base width */
  border-style: solid; /* Base style */
  border-color: transparent; /* Color comes from border-image */
  border-image-source: url("data:image/svg+xml,%3Csvg width='3' height='3' viewBox='0 0 3 3' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h1v1H0zM1 1h1v1H1zM2 2h1v1H2z' fill='currentColor'/%3E%3C/svg%3E");
  border-image-slice: 1;
  border-image-width: 1; /* Controls image coverage */
  border-image-repeat: repeat; /* Pixelated look */
  image-rendering: pixelated; /* Crucial for sharp pixels */
  box-shadow: none; /* No extra shadow */
  /* Set the color on the element itself for 'currentColor' in SVG to work */
  color: var(--dynamic-border-color);
}
/* Add other static border styles if needed and mapped in JS */


/* ========================================================== */
/* == 6. Border Effects (Dynamic - using border-effect-*) Â == */
/* ========================================================== */
/* Applied to .logo-container when .dynamic-border is present */
/* Driven by SettingsManager._applyBorderStyle mapping */
/* REMOVED !important */

.dynamic-border.border-effect-none { box-shadow: none; }
.dynamic-border.border-effect-none::before,
.dynamic-border.border-effect-none::after { display: none; animation: none; content: none; }

/* Mapped from 'border-glow' -> 'border-effect-glow-soft' */
.dynamic-border.border-effect-glow-soft { /* Styles from old .border-glow-soft */
  border: 1px solid rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.5);
  box-shadow: 0 0 10px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.5),
              0 0 20px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.3);
  border-style: solid; /* Ensure base style is solid */
}

/* Add other glow variations if mapped */
.dynamic-border.border-effect-glow-strong { /* Styles from old .border-glow-strong */
  border: 1px solid rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.8);
  box-shadow: 0 0 8px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.7),
              0 0 15px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.5),
              0 0 25px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.3),
              inset 0 0 5px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.2);
  border-style: solid;
}

.dynamic-border.border-effect-glow-pulse { /* Styles from old .border-glow-pulse */
  border: 1px solid rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.8);
  box-shadow: 0 0 8px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.7);
  animation: borderGlowPulseAnim var(--animation-duration, 2s) infinite alternate; /* Use variable */
  border-style: solid;
}
/* Keep keyframes required by effects */
@keyframes borderGlowPulseAnim {
  from { box-shadow: 0 0 5px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.5), 0 0 10px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.3); }
  to   { box-shadow: 0 0 12px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.8), 0 0 25px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.5); }
}

.dynamic-border.border-effect-neon-animated { /* Styles from old .border-neon-animated */
  border: var(--dynamic-border-width, 2px) solid transparent;
  position: relative;
  box-shadow: none;
}
.dynamic-border.border-effect-neon-animated::before,
.dynamic-border.border-effect-neon-animated::after {
  content: '';
  position: absolute;
  inset: calc(-1 * var(--dynamic-border-width, 2px)); /* Position outside the element */
  border: var(--dynamic-border-width, 2px) solid var(--dynamic-border-color, #0ff);
  border-radius: inherit; /* Match container's radius if any */
  animation: borderNeonPulse var(--animation-duration, 2s) infinite alternate; /* Use variable */
  pointer-events: none;
}
.dynamic-border.border-effect-neon-animated::before {
  filter: blur(8px);
  opacity: 0.8;
}
.dynamic-border.border-effect-neon-animated::after {
  filter: blur(20px);
  opacity: 0.5;
  animation-delay: calc(-1 * var(--animation-duration, 2s) / 2); /* Adjust delay based on duration */
}
/* Keep keyframes required by effects */
@keyframes borderNeonPulse {
  from { opacity: 0.4; filter: blur(15px); border-color: rgba(var(--dynamic-border-color-rgb, 0, 255, 255), 0.6); }
  to   { opacity: 0.9; filter: blur(5px); border-color: var(--dynamic-border-color, #0ff); }
}

/* Add other border-effect-* classes as needed, copying rules from old CSS and mapping */
/* Example: Gradient border */
.dynamic-border.border-effect-gradient-animated { /* Styles from old .border-gradient-animated */
  border: var(--dynamic-border-width, 2px) solid transparent;
  position: relative;
  z-index: 0;
  box-shadow: none;
}
.dynamic-border.border-effect-gradient-animated::before {
  content: '';
  position: absolute;
  z-index: -1; /* Behind the content */
  inset: calc(-1 * var(--dynamic-border-width, 2px)); /* Position outside */
  border-radius: inherit; /* Match container radius */
  padding: var(--dynamic-border-width, 2px); /* Create space for the background */
  background: linear-gradient(60deg, var(--primary-color, #FF1493), var(--secondary-color, #8A2BE2), var(--accent-color, #FFD700), var(--primary-color, #FF1493)); /* Use theme vars */
  background-size: 300% 300%;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
          mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude; /* Cut out the middle */
  animation: borderGradientSpin calc(var(--animation-duration, 2s) * 2) linear infinite; /* Use variable, adjust speed */
  pointer-events: none;
}
/* Keep keyframes required by effects */
@keyframes borderGradientSpin {
  to { background-position: 300% 0; }
}

/* Add dashed animated, corners etc. if mapped in JS */

/* ============================================================ */
/* == 7. Text Animations (using anim-*)                     == */
/* ============================================================ */
/* Applied by SettingsManager._applyTextAnimation */

/* --- Keep all @keyframes from OLD Section 7 --- */
@keyframes simplePulse { 0%, 100% { opacity: 0.7; } 50% { opacity: 1; } }
@keyframes simpleSpin { to { transform: rotate(360deg); } }
@keyframes pulse { 0%, 100% { transform: scale(1); opacity: 1; } 50% { transform: scale(1.08); opacity: 0.9; } }
@keyframes bounce { 0%, 100% { transform: translateY(0); animation-timing-function: cubic-bezier(0.5, 0, 0.5, 1); } 50% { transform: translateY(-15px); animation-timing-function: cubic-bezier(0.5, 0, 0.5, 1); } }
@keyframes shake { 0%,100%{transform:translateX(0)} 10%,30%,50%,70%,90%{transform:translateX(-4px) rotate(-0.5deg)} 20%,40%,60%,80%{transform:translateX(4px) rotate(0.5deg)} }
@keyframes float { 0%,100%{transform:translateY(0) rotate(-1deg)} 50% {transform:translateY(-15px) rotate(1deg)} }
@keyframes rotate { 0% {transform:rotate(0deg)} 100% {transform:rotate(360deg)} }
@keyframes wave { 0%,100%{transform:skewX(0) skewY(0)} 25%{transform:skewX(5deg) skewY(1deg)} 75%{transform:skewX(-5deg) skewY(-1deg)} }
@keyframes glitch-1 { 0%,100%{clip-path:inset(50% 0 30% 0);transform:translate(-4px,1px) scaleY(1.02)} 20%{clip-path:inset(10% 0 80% 0);transform:translate(3px,-2px) scaleY(0.98)} 40%{clip-path:inset(70% 0 5% 0);transform:translate(-3px,2px) scaleY(1.01)} 60%{clip-path:inset(45% 0 45% 0);transform:translate(4px,-1px) scaleY(0.99)} 80%{clip-path:inset(85% 0 10% 0);transform:translate(-2px,1px) scaleY(1.03)} }
@keyframes glitch-2 { 0%,100%{clip-path:inset(40% 0 50% 0);transform:translate(3px,-1px) scaleY(0.98)} 20%{clip-path:inset(90% 0 5% 0);transform:translate(-4px,2px) scaleY(1.02)} 40%{clip-path:inset(15% 0 70% 0);transform:translate(2px,-2px) scaleY(0.99)} 60%{clip-path:inset(60% 0 30% 0);transform:translate(-3px,1px) scaleY(1.01)} 80%{clip-path:inset(5% 0 80% 0);transform:translate(3px,-1px) scaleY(1.03)} }
@keyframes fadeInOut { 0%, 100% { opacity: 0.3; } 50% { opacity: 1; } }
@keyframes subtleRotate3D { 0%, 100% { transform: perspective(500px) rotateX(0deg) rotateY(0deg); } 50% { transform: perspective(500px) rotateX(8deg) rotateY(12deg) translateZ(10px); } }
@keyframes flicker { 0%, 18%, 22%, 25%, 53%, 57%, 100% { opacity: 1; text-shadow: inherit; } 20%, 24%, 55% { opacity: 0.6; text-shadow: none; } }
@keyframes typing { from { width: 0; } to { width: 100%; } } /* Needs overflow hidden, white-space nowrap */
@keyframes caretBlink { 50% { border-color: transparent; } } /* Use with ::after for caret */
@keyframes textRevealClip { from { clip-path: inset(0 100% 0 0); } to { clip-path: inset(0 0 0 0); } }
@keyframes blurInOut { 0%, 100% { filter: blur(5px); opacity: 0; } 50% { filter: blur(0); opacity: 1; } }
@keyframes zoomInOut { 0%, 100% { transform: scale(0.8); opacity: 0; } 50% { transform: scale(1); opacity: 1; } }
/* Gradient Flow Keyframe (if text is gradient) */
@keyframes gradientTextFlow {
  from { background-position: 0% 50%; }
  to { background-position: 100% 50%; }
}

/* --- Keep all .anim-* class definitions from OLD Section 7 --- */
/* REMOVED !important from animation properties */
.anim-none { animation: none; }

.anim-pulse {
  animation-name: pulse;
  animation-timing-function: ease-in-out;
  /* Duration/Iteration set by base [class*="anim-"] rule */
}
.anim-bounce {
  animation-name: bounce;
  /* Timing/Iteration set by base rule, specific timing in keyframes */
}
.anim-shake {
  animation-name: shake;
  animation-duration: calc(var(--animation-duration, 2s) * 0.4); /* Adjust duration if needed */
  /* Iteration set by base rule */
}
.anim-float {
  animation-name: float;
  animation-duration: calc(var(--animation-duration, 2s) * 1.8); /* Adjust duration */
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  /* Iteration set by base rule */
}
.anim-rotate {
  animation-name: rotate;
  animation-duration: calc(var(--animation-duration, 2s) * 3); /* Adjust duration */
  animation-timing-function: linear;
  /* Iteration set by base rule */
}
.anim-wave {
  animation-name: wave;
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  /* Iteration set by base rule */
}
.anim-glitch { /* Base style for glitch container */
  position: relative;
  animation: none; /* Container doesn't animate */
}
.anim-glitch::before,
.anim-glitch::after {
  content: attr(data-text); /* Needs data-text attribute set by JS */
  position: absolute;
  inset: 0;
  background: inherit; /* Inherit background for text clipping */
  -webkit-background-clip: text;
          background-clip: text;
  color: transparent;
  -webkit-text-fill-color: transparent; /* Ensure text color is transparent */
  pointer-events: none;
  animation-iteration-count: infinite;
  animation-timing-function: steps(3, end);
  /* Duration is variable */
}
.anim-glitch::before {
  animation-name: glitch-1;
  animation-duration: calc(var(--animation-duration, 2s) * 0.8);
  animation-delay: -0.1s;
}
.anim-glitch::after {
  animation-name: glitch-2;
  animation-duration: calc(var(--animation-duration, 2s) * 1.1);
  animation-delay: 0.1s;
}
.anim-fade {
  animation-name: fadeInOut;
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  /* Iteration/Duration set by base rule */
}
.anim-rotate3d {
  animation-name: subtleRotate3D;
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  animation-duration: calc(var(--animation-duration, 2s) * 2.5); /* Adjust duration */
  /* Iteration set by base rule */
}
.anim-flicker {
  animation-name: flicker;
  animation-duration: calc(var(--animation-duration, 2s) * 1.5); /* Adjust duration */
  animation-timing-function: steps(1, end);
  /* Iteration set by base rule */
}

/* Animations requiring specific element setup */
.anim-typing {
  animation-name: typing, caretBlink;
  animation-duration: calc(var(--animation-duration, 2s) * 2), 0.75s;
  animation-timing-function: steps(30, end), step-end;
  animation-iteration-count: infinite, infinite; /* Both parts infinite */
  animation-direction: alternate, normal;
  white-space: nowrap;
  overflow: hidden;
  border-right: .15em solid var(--primary-color, currentColor); /* Caret */
  width: fit-content; /* Or set width */
  display: inline-block; /* Or block */
}
.anim-reveal {
  animation-name: textRevealClip;
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  /* Iteration/Duration set by base rule */
}
.anim-blur {
  animation-name: blurInOut;
  animation-duration: calc(var(--animation-duration, 2s) * 1.5); /* Adjust duration */
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  /* Iteration set by base rule */
}
.anim-zoom {
  animation-name: zoomInOut;
  animation-duration: calc(var(--animation-duration, 2s) * 1.5); /* Adjust duration */
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  /* Iteration set by base rule */
}

/* Gradient flow animation (applied alongside text gradient) */
/* JS should handle adding this logic potentially */
.logo-text.dynamic-gradient-text { /* Class added by JS when text is gradient */
background-size: 200% auto;
/* Optionally add flow animation if NOT conflicting with main anim-* */
}
.logo-text.dynamic-gradient-text:not(.anim-glitch):not(.anim-typing):not(.anim-reveal):not(.anim-blur):not(.anim-zoom) {
/* Combine base anim-* with gradient flow if desired */
/* animation: inherit, gradientTextFlow 8s linear infinite alternate; */
/* Or handle animation combination logic in JS */
}


/* ============================================================ */
/* == 8. Background Patterns & Effects (using bg-*)         == */
/* ============================================================ */
/* Ensure these target #previewContainer directly */
/* Applied by SettingsManager._handleBackgroundTypeChange */
/* REMOVED !important */

#previewContainer.bg-transparent { background: transparent; }
#previewContainer.bg-solid {
  background-image: none;
  /* background-color set by JS/inline style */
}
#previewContainer.bg-gradient {
  background-size: 100% 100%;
  background-color: transparent; /* Ensure gradient shows */
  /* background-image set by JS/inline style */
}
#previewContainer.bg-gradient-animated-css { /* Uses same gradient as bg-gradient */
  background-size: 300% 300%;
  animation: bgAnimateGradient var(--bg-animation-duration, 15s) ease infinite;
  background-color: transparent;
  /* background-image set by JS/inline style */
}
/* Keep keyframes required by effects */
@keyframes bgAnimateGradient {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* --- Static Patterns - Applied directly to #previewContainer --- */
/* Copy rules from OLD Section 8 */
#previewContainer.bg-grid { background-color: var(--surface-sunken-opaque, #2a2a2e); background-image: linear-gradient(var(--border-subtle, #444) 1px, transparent 1px), linear-gradient(90deg, var(--border-subtle, #444) 1px, transparent 1px); background-size: 30px 30px; }
#previewContainer.bg-dots-sm { background-color: var(--bg-base, #1e1e1e); background-image: radial-gradient(var(--border-default, #666) 1px, transparent 1px); background-size: 15px 15px; }
#previewContainer.bg-dots-lg { background-color: var(--bg-base, #1e1e1e); background-image: radial-gradient(var(--border-default, #666) 2px, transparent 2px); background-size: 30px 30px; }
#previewContainer.bg-checkerboard { background-color: var(--surface-sunken, #252526); background-image: linear-gradient(45deg, var(--border-subtle, #444) 25%, transparent 25%), linear-gradient(-45deg, var(--border-subtle, #444) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, var(--border-subtle, #444) 75%), linear-gradient(-45deg, transparent 75%, var(--border-subtle, #444) 75%); background-size: 20px 20px; background-position: 0 0, 0 10px, 10px -10px, -10px 0px; }
#previewContainer.bg-lines-diag { background-color: var(--bg-base, #1e1e1e); background-image: repeating-linear-gradient(45deg, var(--border-subtle, #444), var(--border-subtle, #444) 1px, transparent 1px, transparent 10px); }
#previewContainer.bg-lines-vert { background-color: var(--bg-base, #1e1e1e); background-image: repeating-linear-gradient(to right, var(--border-subtle, #444), var(--border-subtle, #444) 1px, transparent 1px, transparent 10px); }
#previewContainer.bg-carbon { background-color: #222; background-image: linear-gradient(45deg, rgba(255,255,255,.05) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.05) 50%, rgba(255,255,255,.05) 75%, transparent 75%, transparent), linear-gradient(-45deg, rgba(255,255,255,.05) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.05) 50%, rgba(255,255,255,.05) 75%, transparent 75%, transparent); background-size: 10px 10px; }
#previewContainer.bg-brushed-metal { background: linear-gradient(to bottom, #aaa, #eee, #aaa), linear-gradient(to right, rgba(0,0,0,0.1) 0px, rgba(255,255,255,0.1) 1px, rgba(0,0,0,0.1) 2px); background-size: 100% 100%, 100% 2px; }


/* --- Pattern Overlays (using ::before on #previewContainer) --- */
/* Base for overlays */
#previewContainer::before {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 0; /* Below text */
  opacity: 1; /* Default opacity */
  background-color: transparent;
  background-image: none; /* Reset */
  transition: opacity var(--transition-duration-base, 0.3s);
}
/* Specific overlay patterns */
/* REMOVED !important */
#previewContainer.bg-noise::before {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='n'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23n)' opacity='0.1'/%3E%3C/svg%3E");
  opacity: 0.6;
}
body.light-mode #previewContainer.bg-noise::before { opacity: 0.4; } /* Light mode adjustment */

#previewContainer.bg-scanlines::before {
  background-image: repeating-linear-gradient(to bottom, transparent, transparent 2px, rgba(0,0,0,0.2) 2px, rgba(0,0,0,0.2) 4px);
  opacity: 0.5;
}
body.light-mode #previewContainer.bg-scanlines::before {
  background-image: repeating-linear-gradient(to bottom, transparent, transparent 2px, rgba(255,255,255,0.3) 2px, rgba(255,255,255,0.3) 4px);
  opacity: 0.7; /* Light mode adjustment */
}

#previewContainer.bg-circuit::before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100'%3E%3Cdefs%3E%3ClinearGradient id='g' x1='0' x2='0' y1='0' y2='1'%3E%3Cstop offset='0%25' stop-color='%23888888' stop-opacity='.2'/%3E%3Cstop offset='100%25' stop-color='%23cccccc' stop-opacity='.2'/%3E%3C/linearGradient%3E%3C/defs%3E%3Crect width='100' height='100' fill='url(%23g)'/%3E%3Cpath d='M0 50 H20 V20 H40 V50 H60 V80 H80 V50 H100 M50 0 V20 M80 20 V0 M20 80 V100 M50 80 V100 M80 80 V100' stroke='rgba(255,255,255,0.1)' stroke-width='1' fill='none'/%3E%3Ccircle cx='20' cy='20' r='2' fill='rgba(255,255,255,0.1)'/%3E%3Ccircle cx='80' cy='20' r='2' fill='rgba(255,255,255,0.1)'/%3E%3Ccircle cx='20' cy='80' r='2' fill='rgba(255,255,255,0.1)'/%3E%3Ccircle cx='80' cy='80' r='2' fill='rgba(255,255,255,0.1)'/%3E%3C/svg%3E");
  background-size: 100px 100px;
  opacity: 0.5;
}
body.light-mode #previewContainer.bg-circuit::before { opacity: 0.2; } /* Light mode adjustment */

/* --- Animated Backgrounds - Target #previewContainer --- */
/* Copy rules from OLD Section 8 */
/* REMOVED !important */
#previewContainer.bg-stars { background-color: var(--bg-deep, #05060a); background-image: radial-gradient(circle at center, rgba(255,255,255,0.8) 0px, transparent 1px), radial-gradient(circle at center, rgba(255,255,255,0.5) 0px, transparent 2px), radial-gradient(circle at center, rgba(255,255,255,0.3) 0px, transparent 3px); background-size: 60px 60px, 110px 110px, 180px 180px; background-position: 0 0, 30px 30px, 70px 80px; animation: starsTwinkle 30s linear infinite alternate; }
@keyframes starsTwinkle { 0% { background-position: 0 0, 30px 30px, 70px 80px; } 100% { background-position: -50px 20px, 10px 80px, 120px 20px; } }

#previewContainer.bg-synthwave { background: linear-gradient(to bottom, #1e1035 0%, #4a2a70 60%, #f03d90 100%); }
#previewContainer.bg-synthwave::before { /* Grid lines */ content: ""; position: absolute; inset: 0; top: 50%; background-image: linear-gradient(to bottom, rgba(var(--accent-color-rgb, 255, 215, 0), 0.5) 1px, transparent 1px); background-size: 100% 30px; transform: perspective(150px) rotateX(65deg); transform-origin: center top; animation: synthGridScroll 8s linear infinite; z-index: 0; opacity: 1; } /* Ensure opacity doesn't conflict */
@keyframes synthGridScroll { from { background-position: 0 0; } to { background-position: 0 -60px; } }
#previewContainer.bg-synthwave::after { /* Sun - Use ::after to avoid conflict with pattern ::before */ content: ''; position: absolute; bottom: 65%; left: 50%; transform: translateX(-50%); width: 200px; height: 200px; border-radius: 50%; background: radial-gradient(circle, #fada7a 10%, #f03d90 60%, transparent 70%); filter: blur(10px); opacity: 0.7; z-index: 0; pointer-events: none; }

/* Matrix requires specific HTML setup, defined in old CSS */
#previewContainer.bg-matrix { background-color: #000; filter: saturate(1.5) brightness(1.1); /* Ensure children fill */ position: relative; }
/* Needs JS to add .matrix-columns > .matrix-column inside #previewContainer */
#previewContainer.bg-matrix .matrix-columns { display: flex; position: absolute; inset: 0; z-index: 0; overflow: hidden; }
#previewContainer.bg-matrix .matrix-column {
  writing-mode: vertical-rl; text-orientation: upright; white-space: nowrap;
  user-select: none; font-size: 14px; line-height: 1.1;
  color: rgba(0, 255, 0, 0.8);
  text-shadow: 0 0 5px rgba(0, 255, 0, 0.7), 0 0 10px rgba(50, 255, 50, 0.5);
  flex: 1; overflow: hidden; position: relative;
  animation: matrixScroll var(--scroll-speed, 10s) linear infinite;
  /* Ensure content wraps or repeats */
}
@keyframes matrixScroll { 0% { transform: translateY(-100%); } 100% { transform: translateY(100%); } }
#previewContainer.bg-matrix .matrix-column::before { /* Placeholder */
  content
}

#previewContainer.bg-nebula { /* Styles from old .bg-nebula */
  background-color: #0a0b10;
  background-image:
      radial-gradient(ellipse at 30% 70%, rgba(var(--primary-color-rgb, 255, 20, 147), 0.4) 0%, transparent 60%),
      radial-gradient(ellipse at 70% 30%, rgba(var(--secondary-color-rgb, 138, 43, 226), 0.4) 0%, transparent 50%),
      radial-gradient(ellipse at 50% 50%, rgba(var(--accent-color-rgb, 255, 215, 0), 0.3) 0%, transparent 70%),
      radial-gradient(circle at center, rgba(255,255,255,0.6) 0px, transparent 1px);
  background-size: 150% 150%, 120% 120%, 180% 180%, 80px 80px;
  background-position: -20% 0%, 120% 80%, 50% 50%, 10px 10px;
  animation: nebulaDrift 60s linear infinite alternate;
}
@keyframes nebulaDrift {
  0% { background-position: -20% 0%, 120% 80%, 50% 50%, 10px 10px; }
  100% { background-position: 20% 100%, 0% 0%, 50% 50%, -40px 50px; }
}

#previewContainer.bg-geometric-cubes { /* Styles from old .bg-geometric-cubes */
  background-color: var(--bg-base, #1e1e1e);
  --cube-size: 50px;
  --cube-color-1: hsla(from var(--primary-color, #FF1493) h s l / 0.1);
  --cube-color-2: hsla(from var(--secondary-color, #8A2BE2) h s l / 0.1);
  --cube-color-3: hsla(from var(--accent-color, #FFD700) h s l / 0.1);
  background-image:
      linear-gradient(30deg, var(--cube-color-1) 12%, transparent 12.5%, transparent 87%, var(--cube-color-1) 87.5%, var(--cube-color-1)),
      linear-gradient(150deg, var(--cube-color-1) 12%, transparent 12.5%, transparent 87%, var(--cube-color-1) 87.5%, var(--cube-color-1)),
      linear-gradient(30deg, var(--cube-color-1) 12%, transparent 12.5%, transparent 87%, var(--cube-color-1) 87.5%, var(--cube-color-1)),
      linear-gradient(150deg, var(--cube-color-1) 12%, transparent 12.5%, transparent 87%, var(--cube-color-1) 87.5%, var(--cube-color-1)),
      linear-gradient(60deg, var(--cube-color-2) 25%, transparent 25.5%, transparent 75%, var(--cube-color-2) 75%, var(--cube-color-2)),
      linear-gradient(60deg, var(--cube-color-3) 25%, transparent 25.5%, transparent 75%, var(--cube-color-3) 75%, var(--cube-color-3));
  background-size: calc(var(--cube-size) * 1.732) var(--cube-size);
  background-position: 0 0, 0 0, calc(var(--cube-size) * 0.866) calc(var(--cube-size) * 0.5), calc(var(--cube-size) * 0.866) calc(var(--cube-size) * 0.5), 0 0, calc(var(--cube-size) * 0.866) calc(var(--cube-size) * 0.5);
}
body.light-mode #previewContainer.bg-geometric-cubes {
  --cube-color-1: hsla(from var(--primary-color, #FF1493) h s l / 0.05);
  --cube-color-2: hsla(from var(--secondary-color, #8A2BE2) h s l / 0.05);
  --cube-color-3: hsla(from var(--accent-color, #FFD700) h s l / 0.05);
}


/* ========================================================================== */
/* == 9. Responsive & Accessibility Overrides                             == */
/* ========================================================================== */
/* --- Keep Section 9 rules from OLD file --- */
/* --- KEPT !important in this section for accessibility overrides --- */

/* --- Mobile Optimizations --- */
@media (max-width: 768px) {
  :root {
      /* Slow down animations slightly */
      /* --animation-duration: calc(var(--animation-duration-base, 2s) * 1.3); */ /* Base duration already set */
  }

  /* Text Glows - Reduce blur/spread */
  .text-effect-glow-soft { text-shadow: 0 0 6px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.6), 0 0 10px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.3) !important; }
  .text-effect-glow-medium { text-shadow: 0 0 4px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.8), 0 0 12px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.5) !important; }
  .text-effect-neon-primary, /* Simpler neon for mobile */
  .text-effect-neon-accent { /* Add others if mapped */
      text-shadow:
          0 0 3px var(--dynamic-border-color, #0ff),
          0 0 8px var(--dynamic-border-color, #0ff),
          0 0 15px rgba(var(--primary-color-rgb, 255, 20, 147), 0.6) !important;
  }
  /* Reduce retro shadow offset */
  .text-effect-shadow-retro {
      text-shadow: 2px 2px 0px var(--secondary-color, #8A2BE2), 4px 4px 0px var(--primary-color, #FF1493) !important;
  }

  /* Border Effects - Reduce intensity */
  .dynamic-border.border-effect-glow-soft { box-shadow: 0 0 6px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.4), 0 0 12px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.2) !important; }
  .dynamic-border.border-effect-glow-strong {
      box-shadow: 0 0 5px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.6),
                  0 0 10px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.4),
                  inset 0 0 3px rgba(var(--dynamic-border-color-rgb, 255, 255, 255), 0.15) !important;
  }
  .dynamic-border.border-effect-neon-animated::before { filter: blur(5px); opacity: 0.7; }
  .dynamic-border.border-effect-neon-animated::after { filter: blur(15px); opacity: 0.4; }

  /* Backgrounds - Simplify or reduce intensity */
  #previewContainer.bg-synthwave::before { opacity: 0.3 !important; background-size: 100% 40px !important; } /* Wider lines */
  #previewContainer.bg-synthwave::after { width: 150px; height: 150px; filter: blur(15px); opacity: 0.6; } /* Smaller sun */
  #previewContainer.bg-stars { background-size: 80px 80px, 150px 150px !important; background-position: 0 0, 40px 40px !important; } /* Fewer star layers */
  #previewContainer.bg-nebula { background-size: 120% 120%, 100% 100%, 150% 150%, 100px 100px !important; /* opacity: 0.8 !important; */ } /* Slightly simpler nebula */
  #previewContainer.bg-matrix .matrix-column { font-size: clamp(8px, 1.2vw, 12px); } /* Smaller matrix text */
  #previewContainer.bg-noise::before { opacity: 0.4 !important; }
  body.light-mode #previewContainer.bg-noise::before { opacity: 0.3 !important; }

  /* Animations - Ensure already slowed by --animation-duration change */
  /* Further simplify glitch if needed */
  .anim-glitch::before, .anim-glitch::after {
      animation-timing-function: steps(2, end); /* Less jumpy */
  }
}


/* --- Reduced Motion Preference --- */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
      animation-delay: -1ms !important;
      animation-duration: 1ms !important;
      animation-iteration-count: 1 !important;
      background-attachment: initial !important;
      scroll-behavior: auto !important;
      transition-duration: 0s !important;
      transition-delay: 0s !important;
  }

  /* Specifically disable animations defined in this file */
  [class*="anim-"],
  .dynamic-gradient-text.anim-gradient-flow, /* Assuming a class for this */
  .dynamic-border.border-effect-glow-pulse,
  .dynamic-border.border-effect-neon-animated::before,
  .dynamic-border.border-effect-neon-animated::after,
  .dynamic-border.border-effect-gradient-animated::before,
  .dynamic-border.border-effect-dashed-animated, /* If added */
  #previewContainer.bg-gradient-animated-css,
  #previewContainer.bg-stars,
  #previewContainer.bg-synthwave::before,
  #previewContainer.bg-matrix .matrix-column,
  #previewContainer.bg-nebula {
      animation: none !important;
  }
   /* Remove hover transforms that rely on motion (Example from old file) */
  .hover-reveal::after { /* If .hover-reveal is used */
      transition: none !important;
      left: -75%; /* Keep hidden */
  }
}

/* --- High Contrast Preference --- */
@media (prefers-contrast: more) {
  /* Remove subtle glows and shadows that rely on low contrast */
  [class*="text-effect-glow-"],
  [class*="text-effect-shadow-soft"],
  [class*="text-effect-neon-"],
  [class*="border-effect-glow-"],
  .dynamic-border.border-effect-neon-animated::before,
  .dynamic-border.border-effect-neon-animated::after {
      text-shadow: none !important;
      box-shadow: none !important;
      filter: none !important;
      animation: none !important; /* Disable pulsing effects */
      opacity: 1 !important; /* Ensure visibility if opacity was used */
  }
  /* Ensure hard shadows/outlines remain, but use system colors potentially */
  /* .text-effect-shadow-hard-* { text-shadow: 2px 2px 0px CanvasText !important; } */
  /* .text-effect-outline-* { text-shadow: -1px -1px 0 CanvasText, ... !important; } */

  /* Ensure borders are solid and clearly visible */
  .dynamic-border.border-effect-glow-soft,
  .dynamic-border.border-effect-glow-strong,
  .dynamic-border.border-effect-glow-pulse,
  .dynamic-border.border-effect-neon-animated {
      border: var(--dynamic-border-width, 2px) solid var(--dynamic-border-color, currentColor) !important; /* Ensure solid border, maybe use currentColor */
  }
  /* Consider making patterned backgrounds simpler or solid */
  #previewContainer.bg-nebula,
  #previewContainer.bg-geometric-cubes,
  #previewContainer.bg-synthwave,
  #previewContainer.bg-carbon,
  #previewContainer.bg-brushed-metal {
      background-image: none !important; /* Remove complex gradients/patterns */
      background-color: Canvas !important; /* Use system background */
  }
   /* Ensure simple patterns use contrast colors */
  #previewContainer.bg-grid { background-image: linear-gradient(CanvasText 1px, transparent 1px), linear-gradient(90deg, CanvasText 1px, transparent 1px) !important; }
  #previewContainer.bg-dots-sm { background-image: radial-gradient(CanvasText 1px, transparent 1px) !important; }

  #previewContainer.bg-synthwave::before, /* Hide overlays */
  #previewContainer.bg-synthwave::after { display: none !important; }
  #previewContainer::before { /* Hide general pattern overlays */
      background-image: none !important;
      opacity: 0 !important;
  }
}