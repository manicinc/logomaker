/* ==========================================================================
   effects.css (REVISED & UNIFIED - v2.0)
   --------------------------------------------------------------------------
   Applies visual effects, styles, and animations to Logomaker elements.
   - Uses CSS variables extensively.
   - Standardizes background effects via ::before pseudo-element.
   - Enforces specificity and uses !important where necessary.
   - Consolidates related effects (text, border, background, animation).
========================================================================== */

/* ==========================================================================
   1. Base Setup & Transitions
   ========================================================================== */

.logo-text {
  /* Base font/layout vars are set dynamically via JS or inherited */
  font-size: var(--dynamic-font-size, 100px);
  letter-spacing: var(--dynamic-letter-spacing, 0.03em);
  transform: rotate(var(--dynamic-rotation, 0deg));
  transform-origin: center center;

  /* Smooth transitions for properties changed by effects */
  transition:
    color var(--transition-fast),
    text-shadow var(--transition-base),
    opacity var(--transition-base),
    transform var(--transition-base),
    font-style var(--transition-fast),
    -webkit-text-stroke var(--transition-fast),
    text-stroke var(--transition-fast);

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transform-style: preserve-3d; /* For 3D effects */
  backface-visibility: hidden; /* For 3D effects */
  position: relative; /* Needed for pseudo-elements in some effects */
  z-index: 1; /* Ensure text is above container background */

  /* Crucial for gradient text */
  background-clip: text;
  -webkit-background-clip: text;
  /* color: transparent; */ /* Applied only when gradient is active */
  /* -webkit-text-fill-color: transparent; */ /* Applied only when gradient is active */
}

.logo-container.dynamic-border {
  border-width: var(--dynamic-border-width, 2px);
  border-color: var(--dynamic-border-color, #ffffff);
  border-radius: var(--dynamic-border-radius, 0px);
  padding: var(--dynamic-border-padding, 10px);
  transition: border var(--transition-fast), box-shadow var(--transition-base), padding var(--transition-fast), border-radius var(--transition-fast);
  position: relative; /* Needed for border effects */
  z-index: 0;
  /* background-clip: padding-box; */ /* Might interfere with some effects, remove if problematic */
}

/* Base for animations */
[class*="anim-"] {
  animation-duration: var(--animation-duration, 2s);
  animation-timing-function: var(--transition-timing-function, ease);
  animation-iteration-count: infinite;
  animation-fill-mode: both; /* Ensure styles persist */
}

/* ==========================================================================
   2. Font Styling Classes (Weight, Case, Style, Decoration)
   ========================================================================== */

/* Font Weight */
.logo-text.font-weight-100 { font-weight: 100 !important; }
.logo-text.font-weight-200 { font-weight: 200 !important; }
.logo-text.font-weight-300 { font-weight: 300 !important; }
.logo-text.font-weight-400 { font-weight: 400 !important; }
.logo-text.font-weight-500 { font-weight: 500 !important; }
.logo-text.font-weight-600 { font-weight: 600 !important; }
.logo-text.font-weight-700 { font-weight: 700 !important; }
.logo-text.font-weight-800 { font-weight: 800 !important; }
.logo-text.font-weight-900 { font-weight: 900 !important; }

/* Text Case */
.logo-text.text-case-none { text-transform: none !important; }
.logo-text.text-case-uppercase { text-transform: uppercase !important; }
.logo-text.text-case-lowercase { text-transform: lowercase !important; }
.logo-text.text-case-capitalize { text-transform: capitalize !important; }

/* Text Style (Italic/Oblique) */
.logo-text.text-style-normal { font-style: normal !important; }
.logo-text.text-style-italic { font-style: italic !important; }
.logo-text.text-style-oblique { font-style: oblique 15deg !important; }

/* Text Decoration (Underline, etc.) */
.logo-text.text-decoration-none { text-decoration: none !important; }
.logo-text.text-decoration-underline {
  text-decoration: underline !important;
  text-decoration-thickness: 2px !important;
  text-underline-offset: 0.1em !important;
  text-decoration-color: currentColor !important;
}
.logo-text.text-decoration-overline {
  text-decoration: overline !important;
  text-decoration-thickness: 2px !important;
  text-decoration-color: currentColor !important;
}
.logo-text.text-decoration-line-through {
  text-decoration: line-through !important;
  text-decoration-thickness: 2px !important;
  text-decoration-color: currentColor !important;
}
.logo-text.text-decoration-dashed-underline {
  text-decoration: underline dashed !important;
  text-decoration-thickness: 2px !important;
  text-underline-offset: 0.1em !important;
  text-decoration-color: currentColor !important;
}
.logo-text.text-decoration-wavy-underline {
  text-decoration: underline wavy !important;
  text-decoration-thickness: 2px !important;
  text-underline-offset: 0.2em !important;
  text-decoration-color: currentColor !important;
}

/* ==========================================================================
   3. Text Alignment
   ========================================================================== */
/* Alignment is controlled by setting justify-content on .logo-container via JS */
/* These classes are less critical now but kept for potential direct use */
.text-align-left { text-align: left; }
.text-align-center { text-align: center; }
.text-align-right { text-align: right; }

/* ==========================================================================
   4. Text Effects (Stroke, Shadow, Glow, 3D)
   ========================================================================== */

/* --- Text Stroke --- */
.logo-text.text-stroke-none {
  -webkit-text-stroke: 0 transparent !important;
          text-stroke: 0 transparent !important;
}
.logo-text.text-stroke-thin {
  -webkit-text-stroke: 1px var(--dynamic-border-color, #ffffff) !important;
          text-stroke: 1px var(--dynamic-border-color, #ffffff) !important;
}
.logo-text.text-stroke-medium {
  -webkit-text-stroke: 2px var(--dynamic-border-color, #ffffff) !important;
          text-stroke: 2px var(--dynamic-border-color, #ffffff) !important;
}
.logo-text.text-stroke-thick {
  -webkit-text-stroke: 4px var(--dynamic-border-color, #ffffff) !important;
          text-stroke: 4px var(--dynamic-border-color, #ffffff) !important;
}
.logo-text.text-stroke-contrast {
  -webkit-text-stroke: 2px var(--dynamic-border-color, #ffffff) !important;
          text-stroke: 2px var(--dynamic-border-color, #ffffff) !important;
  /* Ensure contrast stroke overrides shadows/glows if needed */
  text-shadow: none !important;
}

/* --- Standard Shadows & Glows --- */
.logo-text.text-effect-none {
  text-shadow: none !important;
  mix-blend-mode: normal !important;
}
.logo-text.text-effect-glow-soft {
  text-shadow:
    0 0 10px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.7),
    0 0 15px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.4) !important;
}
.logo-text.text-effect-glow-medium {
  text-shadow:
    0 0 6px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.9),
    0 0 18px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.6) !important;
}
.logo-text.text-effect-glow-strong { /* Added class, map in JS if needed */
  text-shadow:
    0 0 5px rgba(var(--dynamic-border-color-rgb, 255,255,255), 1),
    0 0 12px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.8),
    0 0 25px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.6) !important;
}
.logo-text.text-effect-glow-sharp { /* Added class */
  text-shadow:
    0 0 1px rgba(var(--dynamic-border-color-rgb, 255,255,255), 1),
    0 0 3px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.8) !important;
}
.logo-text.text-effect-neon-primary {
  text-shadow:
    0 0 5px var(--dynamic-border-color, #0ff),
    0 0 10px var(--dynamic-border-color, #0ff),
    0 0 20px rgba(var(--primary-color-rgb, 255,20,147), 0.8),
    0 0 35px rgba(var(--primary-color-rgb, 255,20,147), 0.6),
    0 0 50px rgba(var(--primary-color-rgb, 255,20,147), 0.4) !important;
}
.logo-text.text-effect-shadow-soft-md {
  text-shadow: 0 4px 8px rgba(0,0,0,0.35) !important;
}
.logo-text.text-effect-shadow-hard-sm { /* Added class */
  text-shadow: 1px 1px 0px var(--dynamic-border-color, #ffffff) !important;
}
.logo-text.text-effect-shadow-hard-md {
  text-shadow: 2px 2px 0px var(--dynamic-border-color, #ffffff) !important;
}
.logo-text.text-effect-shadow-hard-lg { /* Added class */
  text-shadow: 3px 3px 0px var(--dynamic-border-color, #ffffff) !important;
}
.logo-text.text-effect-shadow-hard-xl { /* Added class */
  text-shadow: 5px 5px 0px var(--dynamic-border-color, #ffffff) !important;
}
.logo-text.text-effect-outline-thin {
  text-shadow:
    -1px -1px 0 var(--dynamic-border-color, #ffffff),
     1px -1px 0 var(--dynamic-border-color, #ffffff),
    -1px  1px 0 var(--dynamic-border-color, #ffffff),
     1px  1px 0 var(--dynamic-border-color, #ffffff) !important;
}
.logo-text.text-effect-outline-thick { /* Added class */
  text-shadow:
    -1px -1px 0 var(--dynamic-border-color, #ffffff), 1px -1px 0 var(--dynamic-border-color, #ffffff),
    -1px  1px 0 var(--dynamic-border-color, #ffffff), 1px  1px 0 var(--dynamic-border-color, #ffffff),
    -2px -2px 0 var(--dynamic-border-color, #ffffff), 2px -2px 0 var(--dynamic-border-color, #ffffff),
    -2px  2px 0 var(--dynamic-border-color, #ffffff), 2px  2px 0 var(--dynamic-border-color, #ffffff),
    0 0 5px rgba(0,0,0,0.2) !important;
}
.logo-text.text-effect-shadow-retro {
  text-shadow:
    3px 3px 0px var(--secondary-color, #8A2BE2),
    6px 6px 0px var(--primary-color, #FF1493),
    9px 9px 5px rgba(0,0,0,0.2) !important;
}
.logo-text.text-effect-emboss {
  text-shadow:
    -1px -1px 1px rgba(0,0,0,0.6),
     1px  1px 1px rgba(255,255,255,0.15) !important;
}
.logo-text.text-effect-inset {
  text-shadow:
     1px  1px 1px rgba(0,0,0,0.6),
    -1px -1px 1px rgba(255,255,255,0.15) !important;
}

/* Blend modes */
.logo-text.text-effect-blend-screen { mix-blend-mode: screen !important; color: #eee !important; }
.logo-text.text-effect-blend-multiply { mix-blend-mode: multiply !important; color: #333 !important; }
.logo-text.text-effect-blend-overlay { mix-blend-mode: overlay !important; }
.logo-text.text-effect-blend-difference { mix-blend-mode: difference !important; color: #fff !important; }

/* --- 3D Text Effects --- */
.logo-text.text-effect-3d-simple {
  text-shadow:
    1px 1px 0 var(--dynamic-border-color, #ffffff),
    2px 2px 0 var(--dynamic-border-color, #ffffff),
    3px 3px 0 var(--dynamic-border-color, #ffffff),
    4px 4px 0 var(--dynamic-border-color, #ffffff),
    5px 5px 0 var(--dynamic-border-color, #ffffff),
    6px 6px 10px rgba(0,0,0,0.5) !important;
}
.logo-text.text-effect-3d-extrude {
  text-shadow:
    1px 1px 0px var(--dynamic-border-color, #999), 2px 2px 0px var(--dynamic-border-color, #888),
    3px 3px 0px var(--dynamic-border-color, #777), 4px 4px 0px var(--dynamic-border-color, #666),
    5px 5px 0px var(--dynamic-border-color, #555), 6px 6px 0px var(--dynamic-border-color, #444),
    7px 7px 0px var(--dynamic-border-color, #333), 8px 8px 10px rgba(0,0,0,0.4) !important;
}
.logo-text.text-effect-3d-bevel {
  text-shadow:
    -1px -1px 1px rgba(255,255,255,0.5), 1px 1px 1px rgba(0,0,0,0.5),
    2px 2px 2px rgba(0,0,0,0.4), 3px 3px 2px rgba(0,0,0,0.3),
    4px 4px 2px rgba(0,0,0,0.2), 5px 5px 2px rgba(0,0,0,0.1) !important;
}
.logo-text.text-effect-isometric {
  text-shadow:
    1px 1px 0 var(--dynamic-border-color, #ddd), 2px 2px 0 var(--dynamic-border-color, #ccc),
    3px 3px 0 var(--dynamic-border-color, #bbb), 4px 4px 0 var(--dynamic-border-color, #aaa),
    5px 5px 0 var(--dynamic-border-color, #999), 6px 6px 0 var(--dynamic-border-color, #888),
    7px 7px 0 var(--dynamic-border-color, #777), 6px 8px 0 var(--dynamic-border-color, #666),
    5px 9px 0 var(--dynamic-border-color, #555), 4px 10px 0 var(--dynamic-border-color, #444),
    3px 11px 0 var(--dynamic-border-color, #333), 2px 12px 0 var(--dynamic-border-color, #222),
    1px 13px 0 var(--dynamic-border-color, #111), 0px 14px 10px rgba(0,0,0,0.3) !important;
}
.logo-text.text-effect-reflection {
  position: relative !important; /* Required for pseudo */
}
.logo-text.text-effect-reflection::after {
  content: attr(data-text) !important;
  position: absolute !important;
  top: 100% !important;
  left: 0 !important; right: 0 !important;
  transform: rotateX(180deg) !important;
  transform-origin: top !important;
  background: linear-gradient(to bottom, rgba(255,255,255,0.8) 0%, transparent 100%) !important;
  -webkit-background-clip: text !important;
          background-clip: text !important;
  color: transparent !important;
  line-height: 0.9 !important;
  opacity: 0.5 !important;
  pointer-events: none !important;
}
.logo-text.text-effect-cutout {
  color: var(--bg-base, #1e1e1e) !important; /* Set text color to background */
  -webkit-text-stroke: 2px var(--dynamic-border-color, #ffffff) !important;
          text-stroke: 2px var(--dynamic-border-color, #ffffff) !important;
  text-shadow: 6px 6px 0px var(--dynamic-border-color, #ffffff) !important;
}

/* ==========================================================================
   5. Border Styles & Effects (Applied to .logo-container.dynamic-border)
   ========================================================================== */

/* --- Static Border Styles --- */
.logo-container.dynamic-border.border-style-none {
  border-style: none !important;
  box-shadow: none !important;
}
.logo-container.dynamic-border.border-style-solid { border-style: solid !important; }
.logo-container.dynamic-border.border-style-double {
  border-style: double !important;
  border-width: calc(var(--dynamic-border-width, 2px) * 2.5) !important;
}
.logo-container.dynamic-border.border-style-dashed { border-style: dashed !important; }
.logo-container.dynamic-border.border-style-dotted { border-style: dotted !important; }
.logo-container.dynamic-border.border-style-groove {
  border-style: groove !important;
  border-width: calc(var(--dynamic-border-width, 2px) * 2) !important;
}
.logo-container.dynamic-border.border-style-ridge {
  border-style: ridge !important;
  border-width: calc(var(--dynamic-border-width, 2px) * 2) !important;
}
.logo-container.dynamic-border.border-style-inset {
  border-style: inset !important;
  border-width: calc(var(--dynamic-border-width, 2px) * 2) !important;
}
.logo-container.dynamic-border.border-style-outset {
  border-style: outset !important;
  border-width: calc(var(--dynamic-border-width, 2px) * 2) !important;
}
.logo-container.dynamic-border.border-style-thick { /* Added class */
  border-style: solid !important;
  border-width: calc(var(--dynamic-border-width, 2px) * 2) !important;
}
.logo-container.dynamic-border.border-style-pixel {
  border-width: calc(var(--dynamic-border-width, 2px) + 3px) !important;
  border-style: solid !important;
  border-color: transparent !important;
  border-image-source: url("data:image/svg+xml,%3Csvg width='3' height='3' viewBox='0 0 3 3' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h1v1H0zM1 1h1v1H1zM2 2h1v1H2z' fill='currentColor'/%3E%3C/svg%3E") !important;
  border-image-slice: 1 !important;
  border-image-width: 1 !important;
  border-image-repeat: repeat !important;
  image-rendering: pixelated !important;
  color: var(--dynamic-border-color) !important; /* Used as 'currentColor' */
  box-shadow: none !important;
}
.logo-container.dynamic-border.border-style-multi-layer {
  border: var(--dynamic-border-width, 2px) solid var(--dynamic-border-color, #ffffff) !important;
  box-shadow:
    0 0 0 2px var(--secondary-color, #8A2BE2),
    0 0 0 calc(var(--dynamic-border-width, 2px) + 4px) var(--accent-color, #FFD700) !important;
  /* Padding adjustment might be better handled by JS setting --dynamic-border-padding */
  /* padding: calc(var(--dynamic-border-padding, 10px) + 4px); */
}
.logo-container.dynamic-border.border-style-image-dots {
  border: var(--dynamic-border-width, 8px) solid transparent !important;
  border-image: url("data:image/svg+xml,<svg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><circle cx='12' cy='12' r='8' fill='currentColor'/></svg>") 12 repeat !important;
  border-image-slice: 12 !important;
  border-image-width: var(--dynamic-border-width, 8px) !important;
  border-image-repeat: repeat !important;
  color: var(--dynamic-border-color, #ffffff) !important;
  box-shadow: none !important;
}
.logo-container.dynamic-border.border-style-image-zigzag {
  border: var(--dynamic-border-width, 8px) solid transparent !important;
  border-image: url("data:image/svg+xml,<svg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path d='M0,0 L24,0 L24,8 L16,16 L24,24 L0,24 L0,16 L8,8 L0,0' fill='currentColor'/></svg>") 12 repeat !important;
  border-image-slice: 12 !important;
  border-image-width: var(--dynamic-border-width, 8px) !important;
  border-image-repeat: repeat !important;
  color: var(--dynamic-border-color, #ffffff) !important;
  box-shadow: none !important;
}
.logo-container.dynamic-border.border-style-corners-cut {
  --cut-size: 20px;
  clip-path: polygon(
    var(--cut-size) 0%, calc(100% - var(--cut-size)) 0%,
    100% var(--cut-size), 100% calc(100% - var(--cut-size)),
    calc(100% - var(--cut-size)) 100%, var(--cut-size) 100%,
    0 calc(100% - var(--cut-size)), 0 var(--cut-size)
  ) !important;
  /* Ensure border still shows */
  border-style: solid !important;
}
.logo-container.dynamic-border.border-style-corners-rounded-different {
  border-radius: 30px 10px 50px 5px !important;
}

/* --- Border Effects (Glows, Animated) --- */
.logo-container.dynamic-border.border-effect-none {
  box-shadow: none !important;
  border-style: solid !important; /* Ensure it overrides specific styles */
  border-color: var(--dynamic-border-color, #ffffff) !important;
}
.logo-container.dynamic-border.border-effect-none::before,
.logo-container.dynamic-border.border-effect-none::after {
  display: none !important;
  animation: none !important;
  content: none !important;
}

/* Glows */
.logo-container.dynamic-border.border-effect-glow-soft {
  border-style: solid !important;
  border-color: rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.5) !important;
  box-shadow: 0 0 10px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.5),
              0 0 20px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.3) !important;
}
.logo-container.dynamic-border.border-effect-glow-strong {
  border-style: solid !important;
  border-color: rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.8) !important;
  box-shadow:
    0 0 8px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.7),
    0 0 15px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.5),
    0 0 25px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.3),
    inset 0 0 5px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.2) !important;
}
.logo-container.dynamic-border.border-effect-glow-pulse {
  border-style: solid !important;
  border-color: rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.8) !important;
  box-shadow: 0 0 8px rgba(var(--dynamic-border-color-rgb, 255,255,255), 0.7) !important;
  animation: borderGlowPulseAnim var(--animation-duration, 2s) infinite alternate !important;
}
@keyframes borderGlowPulseAnim { /* Keyframe from original */
  from { box-shadow: 0 0 5px rgba(var(--dynamic-border-color-rgb,255,255,255),0.5), 0 0 10px rgba(var(--dynamic-border-color-rgb,255,255,255),0.3); }
  to { box-shadow: 0 0 12px rgba(var(--dynamic-border-color-rgb,255,255,255),0.8), 0 0 25px rgba(var(--dynamic-border-color-rgb,255,255,255),0.5); }
}

/* Neon Animated */
.logo-container.dynamic-border.border-effect-neon-animated {
  border: var(--dynamic-border-width, 2px) solid transparent !important;
  position: relative !important;
  box-shadow: none !important;
}
.logo-container.dynamic-border.border-effect-neon-animated::before,
.logo-container.dynamic-border.border-effect-neon-animated::after {
  content: '' !important;
  position: absolute !important;
  inset: calc(-1 * var(--dynamic-border-width, 2px)) !important;
  border: var(--dynamic-border-width, 2px) solid var(--dynamic-border-color, #0ff) !important;
  border-radius: inherit !important;
  animation: borderNeonPulse var(--animation-duration, 2s) infinite alternate !important;
  pointer-events: none !important;
  display: block !important; /* Ensure pseudo-elements show */
}
.logo-container.dynamic-border.border-effect-neon-animated::before {
  filter: blur(8px) !important;
  opacity: 0.8 !important;
}
.logo-container.dynamic-border.border-effect-neon-animated::after {
  filter: blur(20px) !important;
  opacity: 0.5 !important;
  animation-delay: calc(-1 * var(--animation-duration, 2s) / 2) !important;
}
@keyframes borderNeonPulse { /* Keyframe from original */
  from { opacity: 0.4; filter: blur(15px); border-color: rgba(var(--dynamic-border-color-rgb,0,255,255),0.6); }
  to { opacity: 0.9; filter: blur(5px); border-color: var(--dynamic-border-color, #0ff); }
}

/* Gradient Animated */
.logo-container.dynamic-border.border-effect-gradient-animated {
  border: var(--dynamic-border-width, 2px) solid transparent !important;
  position: relative !important;
  z-index: 0 !important;
  box-shadow: none !important;
}
.logo-container.dynamic-border.border-effect-gradient-animated::before {
  content: '' !important;
  position: absolute !important;
  z-index: -1 !important;
  inset: calc(-1 * var(--dynamic-border-width, 2px)) !important;
  border-radius: inherit !important;
  padding: var(--dynamic-border-width, 2px) !important;
  background: linear-gradient(60deg,
    var(--primary-color, #FF1493), var(--secondary-color, #8A2BE2),
    var(--accent-color, #FFD700), var(--primary-color, #FF1493)) !important;
  background-size: 300% 300% !important;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0) !important;
          mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0) !important;
  -webkit-mask-composite: xor !important;
          mask-composite: exclude !important;
  animation: borderGradientSpin calc(var(--animation-duration, 2s) * 2) linear infinite !important;
  pointer-events: none !important;
  display: block !important; /* Ensure pseudo-element shows */
}
@keyframes borderGradientSpin { /* Keyframe from original */
  to { background-position: 300% 0; }
}

/* Marching Ants, Rotating Dash, Double Glow */
.logo-container.dynamic-border.border-effect-marching-ants {
  border-style: dashed !important;
  animation: marchingAnts 1s infinite linear !important;
  box-shadow: none !important;
}
@keyframes marchingAnts { /* Keyframe from original */
  /* Adjusting for smoother visual - using background gradient */
  0% { background-image: repeating-linear-gradient(-45deg, currentColor, currentColor 5px, transparent 5px, transparent 10px); background-size: 14px 14px; }
  100% { background-image: repeating-linear-gradient(-45deg, currentColor, currentColor 5px, transparent 5px, transparent 10px); background-size: 14px 14px; background-position: 14px 0; }
  /* Fallback */
  /* 0% { border-style: dashed; } 50% { border-style: solid; } 100% { border-style: dashed; } */
}
.logo-container.dynamic-border.border-effect-rotating-dash {
  border-style: dashed !important;
  animation: rotateDash 5s linear infinite !important;
  box-shadow: none !important;
}
@keyframes rotateDash { /* Keyframe from original - simpler */
   0% { border-style: dashed; }
   25% { border-style: dotted; }
   50% { border-style: double; }
   75% { border-style: dotted; }
   100% { border-style: dashed; }
}
.logo-container.dynamic-border.border-effect-double-glow {
  border-style: solid !important;
  box-shadow:
    0 0 10px rgba(var(--dynamic-border-color-rgb,255,255,255), 0.5),
    0 0 20px rgba(var(--accent-color-rgb,255,215,0), 0.3) !important;
  position: relative !important;
}
.logo-container.dynamic-border.border-effect-double-glow::before {
  content: '' !important;
  position: absolute !important;
  inset: calc(-1 * var(--dynamic-border-width,2px) - 5px) !important;
  border: var(--dynamic-border-width,2px) solid var(--accent-color,#FFD700) !important;
  border-radius: inherit !important;
  pointer-events: none !important;
  z-index: -1 !important;
  opacity: 0.6 !important;
  animation: doubleGlowPulse 3s ease-in-out infinite alternate !important;
  display: block !important; /* Ensure pseudo-element shows */
}
@keyframes doubleGlowPulse { /* Keyframe from original */
  0% { opacity: 0.4; filter: blur(5px); }
  100% { opacity: 0.8; filter: blur(8px); }
}

/* ==========================================================================
   6. Text Animations
   ========================================================================== */

/* --- Standard Animations --- */
/* Keyframes are defined below or assumed globally defined */
.logo-text.anim-none { animation: none !important; }
.logo-text.anim-pulse { animation-name: pulse !important; animation-timing-function: ease-in-out !important; }
.logo-text.anim-bounce { animation-name: bounce !important; }
.logo-text.anim-shake { animation-name: shake !important; animation-duration: calc(var(--animation-duration, 2s) * 0.4) !important; }
.logo-text.anim-float { animation-name: float !important; animation-duration: calc(var(--animation-duration, 2s) * 1.8) !important; animation-direction: alternate !important; }
.logo-text.anim-rotate { animation-name: rotate !important; animation-duration: calc(var(--animation-duration, 2s) * 3) !important; animation-timing-function: linear !important; }
.logo-text.anim-wave { animation-name: wave !important; animation-direction: alternate !important; }
.logo-text.anim-glitch { position: relative !important; animation: none !important; }
.logo-text.anim-glitch::before,
.logo-text.anim-glitch::after {
  content: attr(data-text) !important;
  position: absolute !important;
  inset: 0 !important;
  background: inherit !important;
  -webkit-background-clip: text !important;
          background-clip: text !important;
  color: transparent !important;
  pointer-events: none !important;
  animation-iteration-count: infinite !important;
  animation-timing-function: steps(3, end) !important;
  display: block !important; /* Ensure pseudo-elements show */
}
.logo-text.anim-glitch::before {
  animation-name: glitch-1 !important;
  animation-duration: calc(var(--animation-duration, 2s) * 0.8) !important;
  animation-delay: -0.1s !important;
}
.logo-text.anim-glitch::after {
  animation-name: glitch-2 !important;
  animation-duration: calc(var(--animation-duration, 2s) * 1.1) !important;
  animation-delay: 0.1s !important;
}
.logo-text.anim-fade { animation-name: fadeInOut !important; animation-direction: alternate !important; }
.logo-text.anim-flicker { animation-name: flicker !important; animation-duration: calc(var(--animation-duration, 2s) * 1.5) !important; animation-timing-function: steps(1, end) !important; }

/* --- Advanced Animations --- */
.logo-text.anim-liquify { animation-name: liquify !important; animation-duration: calc(var(--animation-duration,2s)*2) !important; animation-timing-function: ease-in-out !important; }
.logo-text.anim-wobble { animation-name: wobble !important; animation-duration: calc(var(--animation-duration,2s)*1.5) !important; animation-timing-function: cubic-bezier(0.68,-0.55,0.27,1.55) !important; }
.logo-text.anim-perspective { animation-name: perspective-tilt !important; animation-duration: calc(var(--animation-duration,2s)*2) !important; animation-timing-function: ease-in-out !important; }
.logo-text.anim-split { animation-name: split-text !important; animation-duration: calc(var(--animation-duration,2s)*1.5) !important; animation-timing-function: cubic-bezier(0.25,0.46,0.45,0.94) !important; }
.logo-text.anim-magnify { animation-name: text-magnify !important; animation-duration: calc(var(--animation-duration,2s)*1.3) !important; animation-timing-function: ease-in-out !important; }
.logo-text.anim-glow-multicolor { animation-name: multicolor-glow !important; animation-duration: calc(var(--animation-duration,2s)*3) !important; animation-timing-function: ease-in-out !important; }
.logo-text.anim-flip-3d { animation-name: flip-3d !important; animation-duration: calc(var(--animation-duration,2s)*3) !important; animation-timing-function: ease-in-out !important; backface-visibility: visible !important; }
.logo-text.anim-swing-3d { animation-name: swing-3d !important; animation-duration: calc(var(--animation-duration,2s)*2) !important; animation-timing-function: ease-in-out !important; }

/* --- Keyframes (Consolidated & Ensured) --- */
/* Ensure all necessary keyframes exist */
@keyframes pulse { 0%,100%{transform:scale(1);opacity:1;} 50%{transform:scale(1.08);opacity:.9;} }
@keyframes bounce { 0%,100% {transform:translateY(0);animation-timing-function:cubic-bezier(0.5,0,0.5,1);} 50% {transform:translateY(-15px);animation-timing-function:cubic-bezier(0.5,0,0.5,1);} }
@keyframes shake { 0%,100%{transform:translateX(0)} 10%,30%,50%,70%,90%{transform:translateX(-4px) rotate(-0.5deg)} 20%,40%,60%,80%{transform:translateX(4px) rotate(0.5deg)} }
@keyframes float { 0%,100%{transform:translateY(0) rotate(-1deg)} 50%{transform:translateY(-15px) rotate(1deg)} }
@keyframes rotate { 0%{transform:rotate(0deg)} 100%{transform:rotate(360deg)} }
@keyframes wave { 0%,100%{transform:skewX(0) skewY(0)} 25%{transform:skewX(5deg) skewY(1deg)} 75%{transform:skewX(-5deg) skewY(-1deg)} }
@keyframes glitch-1 { 0%,100%{clip-path:inset(50% 0 30% 0);transform:translate(-4px,1px) scaleY(1.02)} 20%{clip-path:inset(10% 0 80% 0);transform:translate(3px,-2px) scaleY(0.98)} 40%{clip-path:inset(70% 0 5% 0);transform:translate(-3px,2px) scaleY(1.01)} 60%{clip-path:inset(45% 0 45% 0);transform:translate(4px,-1px) scaleY(0.99)} 80%{clip-path:inset(85% 0 10% 0);transform:translate(-2px,1px) scaleY(1.03)} }
@keyframes glitch-2 { 0%,100%{clip-path:inset(40% 0 50% 0);transform:translate(3px,-1px) scaleY(0.98)} 20%{clip-path:inset(90% 0 5% 0);transform:translate(-4px,2px) scaleY(1.02)} 40%{clip-path:inset(15% 0 70% 0);transform:translate(2px,-2px) scaleY(0.99)} 60%{clip-path:inset(60% 0 30% 0);transform:translate(-3px,1px) scaleY(1.01)} 80%{clip-path:inset(5% 0 80% 0);transform:translate(3px,-1px) scaleY(1.03)} }
@keyframes fadeInOut { 0%,100%{opacity:0.3;} 50%{opacity:1;} }
@keyframes flicker { 0%,18%,22%,25%,53%,57%,100%{opacity:1;text-shadow:inherit;} 20%,24%,55%{opacity:0.6;text-shadow:none;} }
@keyframes liquify { 0%,100%{ transform: perspective(400px) rotateX(0deg) scaleY(1); } 25% { transform: perspective(400px) rotateX(3deg) scaleY(.97) translateY(5px);} 50% { transform: perspective(400px) rotateX(-2deg) scaleY(1.04) translateY(-5px);} 75% { transform: perspective(400px) rotateX(3deg) scaleY(.97) translateY(7px);} }
@keyframes wobble { 0%,100% { transform: translateX(0); letter-spacing: var(--dynamic-letter-spacing,0.03em); } 25% { transform: translateX(-10px); letter-spacing: calc(var(--dynamic-letter-spacing,0.03em)+0.02em); } 75% { transform: translateX(10px); letter-spacing: calc(var(--dynamic-letter-spacing,0.03em)-0.02em); } }
@keyframes perspective-tilt { 0%,100%{ transform:perspective(500px) rotateY(0deg); } 50% { transform:perspective(500px) rotateY(15deg); } }
@keyframes split-text { 0%,100%{ letter-spacing:var(--dynamic-letter-spacing,0.03em); opacity:1; } 50% { letter-spacing:calc(var(--dynamic-letter-spacing,0.03em)+0.3em); opacity:0.7; } }
@keyframes text-magnify { 0%,100% { transform:scale(1); } 50% { transform:scale(1.1); } }
@keyframes multicolor-glow { 0%,100% { text-shadow: 0 0 10px rgba(var(--primary-color-rgb,255,20,147), 0.8), 0 0 20px rgba(var(--primary-color-rgb,255,20,147), 0.5); } 33% { text-shadow: 0 0 10px rgba(var(--secondary-color-rgb,138,43,226), 0.8), 0 0 20px rgba(var(--secondary-color-rgb,138,43,226), 0.5); } 66% { text-shadow: 0 0 10px rgba(var(--accent-color-rgb,255,215,0), 0.8), 0 0 20px rgba(var(--accent-color-rgb,255,215,0), 0.5); } }
@keyframes flip-3d { 0% { transform:perspective(400px) rotateY(0); } 50% { transform:perspective(400px) rotateY(180deg); } 100% { transform:perspective(400px) rotateY(360deg); } }
@keyframes swing-3d { 0%,100% { transform: perspective(600px) rotateX(0) rotateY(0); } 25% { transform: perspective(600px) rotateX(10deg) rotateY(10deg); } 50% { transform: perspective(600px) rotateX(0) rotateY(0); } 75% { transform: perspective(600px) rotateX(-10deg) rotateY(-10deg); } }

/* ==========================================================================
   7. Background Patterns & Effects (Applied to #previewContainer::before)
   ========================================================================== */

/* --- Base Background Pseudo-element --- */
#previewContainer::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 0; /* Behind logo-container */
  border-radius: inherit; /* Inherit from parent */
  pointer-events: none; /* Allow interaction with parent */

  /* Default state: use dynamic vars set by JS */
  background-color: var(--dynamic-bg-color, #000000);
  background-image: var(--dynamic-bg-gradient, none);
  background-size: cover; /* Sensible default */
  background-position: center;
  background-repeat: no-repeat;

  /* CRITICAL: Apply opacity only here */
  opacity: var(--bg-opacity, 1);
  transition: opacity var(--transition-base), background-color var(--transition-base), background-image var(--transition-base);
}

/* --- Specific Background Classes --- */
/* Transparent */
#previewContainer.bg-transparent::before {
  background-color: transparent !important;
  background-image: none !important;
}

/* Solid (Handled by default ::before state using --dynamic-bg-color) */
#previewContainer.bg-solid::before {
  background-image: none !important; /* Ensure no gradient */
}

/* Gradient (Handled by default ::before state using --dynamic-bg-gradient) */
#previewContainer.bg-gradient::before {
  background-size: cover !important;
  background-color: transparent !important; /* Ensure no solid color */
}

/* Animated Gradient */
#previewContainer.bg-gradient-animated::before {
  background-image: var(--dynamic-bg-gradient, linear-gradient(60deg, var(--primary-color), var(--secondary-color), var(--accent-color), var(--primary-color))) !important;
  background-size: 300% 300% !important;
  animation: bgAnimateGradient var(--bg-animation-duration, 15s) ease infinite !important;
  background-color: transparent !important;
}
@keyframes bgAnimateGradient {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* --- Pattern Backgrounds --- */
#previewContainer.bg-grid::before {
  background-color: var(--bg-base, #1e1e1e) !important;
  background-image:
    linear-gradient(var(--border-color, #444) 1px, transparent 1px),
    linear-gradient(90deg, var(--border-color, #444) 1px, transparent 1px) !important;
  background-size: 30px 30px !important;
}
#previewContainer.bg-darkgrid::before { /* Added dark grid */
  background-color: var(--bg-deep, #05060a) !important;
  background-image:
    linear-gradient(rgba(var(--accent-color-rgb, 0, 242, 234), 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(var(--accent-color-rgb, 0, 242, 234), 0.1) 1px, transparent 1px) !important;
  background-size: 40px 40px !important;
}
#previewContainer.bg-dots-sm::before {
  background-color: var(--bg-base, #1e1e1e) !important;
  background-image: radial-gradient(var(--border-color, #666) 1px, transparent 2px) !important;
  background-size: 15px 15px !important;
}
#previewContainer.bg-dots-lg::before {
  background-color: var(--bg-base, #1e1e1e) !important;
  background-image: radial-gradient(var(--border-color, #666) 2px, transparent 3px) !important;
  background-size: 30px 30px !important;
}
#previewContainer.bg-checkerboard::before {
  background-color: var(--surface-sunken, #252526) !important;
  background-image:
    linear-gradient(45deg, var(--border-subtle, #444) 25%, transparent 25%),
    linear-gradient(-45deg, var(--border-subtle, #444) 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, var(--border-subtle, #444) 75%),
    linear-gradient(-45deg, transparent 75%, var(--border-subtle, #444) 75%) !important;
  background-size: 20px 20px !important;
  background-position: 0 0, 0 10px, 10px -10px, -10px 0 !important;
}
#previewContainer.bg-lines-diag::before {
  background-color: var(--bg-base, #1e1e1e) !important;
  background-image: repeating-linear-gradient(45deg, var(--border-subtle, #444), var(--border-subtle, #444) 1px, transparent 1px, transparent 10px) !important;
}
#previewContainer.bg-lines-vert::before {
  background-color: var(--bg-base, #1e1e1e) !important;
  background-image: repeating-linear-gradient(to right, var(--border-subtle, #444), var(--border-subtle, #444) 1px, transparent 1px, transparent 10px) !important;
}
#previewContainer.bg-carbon::before {
  background-color: #222 !important;
  background-image:
    linear-gradient(45deg, rgba(255,255,255,.05) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.05) 50%, rgba(255,255,255,.05) 75%, transparent 75%, transparent),
    linear-gradient(-45deg, rgba(255,255,255,.05) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.05) 50%, rgba(255,255,255,.05) 75%, transparent 75%, transparent) !important;
  background-size: 10px 10px !important;
}

/* --- Overlay Background Effects --- */
/* Noise */
#previewContainer.bg-noise::after { /* Using ::after to stack OVER ::before */
  content: ""; position: absolute; inset: 0; z-index: 1;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='n'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23n)' opacity='0.1'/%3E%3C/svg%3E") !important;
  opacity: var(--bg-opacity, 0.6) !important; /* Combine effect opacity with base bg opacity */
  pointer-events: none; border-radius: inherit;
}
body.light-mode #previewContainer.bg-noise::after { opacity: calc(var(--bg-opacity, 1) * 0.4) !important; }

/* Scanlines */
#previewContainer.bg-scanlines::after {
  content: ""; position: absolute; inset: 0; z-index: 1;
  background-image: repeating-linear-gradient(to bottom, transparent, transparent 2px, rgba(0,0,0,0.2) 2px, rgba(0,0,0,0.2) 4px) !important;
  opacity: calc(var(--bg-opacity, 1) * 0.5) !important;
  pointer-events: none; border-radius: inherit;
}
body.light-mode #previewContainer.bg-scanlines::after {
  background-image: repeating-linear-gradient(to bottom, transparent, transparent 2px, rgba(255,255,255,0.3) 2px, rgba(255,255,255,0.3) 4px) !important;
  opacity: calc(var(--bg-opacity, 1) * 0.7) !important;
}

/* Circuit Board */
#previewContainer.bg-circuit::before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100'%3E%3Cdefs%3E%3ClinearGradient id='g' x1='0' x2='0' y1='0' y2='1'%3E%3Cstop offset='0%25' stop-color='%23888888' stop-opacity='.2'/%3E%3Cstop offset='100%25' stop-color='%23cccccc' stop-opacity='.2'/%3E%3C/linearGradient%3E%3C/defs%3E%3Crect width='100' height='100' fill='url(%23g)'/%3E%3Cpath d='M0 50 H20 V20 H40 V50 H60 V80 H80 V50 H100 M50 0 V20 M80 20 V0 M20 80 V100 M50 80 V100 M80 80 V100' stroke='rgba(255,255,255,0.1)' stroke-width='1' fill='none'/%3E%3Ccircle cx='20' cy='20' r='2' fill='rgba(255,255,255,0.1)'/%3E%3Ccircle cx='80' cy='20' r='2' fill='rgba(255,255,255,0.1)'/%3E%3Ccircle cx='20' cy='80' r='2' fill='rgba(255,255,255,0.1)'/%3E%3Ccircle cx='80' cy='80' r='2' fill='rgba(255,255,255,0.1)'/%3E%3C/svg%3E") !important;
  background-size: 100px 100px !important;
  background-color: var(--bg-base, #1a2228) !important;
  opacity: calc(var(--bg-opacity, 1) * 0.5) !important; /* Apply opacity here */
}
body.light-mode #previewContainer.bg-circuit::before { opacity: calc(var(--bg-opacity, 1) * 0.2) !important; }

/* Starfield */
#previewContainer.bg-stars::before {
  background-color: var(--bg-deep, #05060a) !important;
  background-image:
    radial-gradient(circle at center, rgba(255,255,255,0.8) 0px, transparent 1px),
    radial-gradient(circle at center, rgba(255,255,255,0.5) 0px, transparent 2px),
    radial-gradient(circle at center, rgba(255,255,255,0.3) 0px, transparent 3px) !important;
  background-size: 60px 60px, 110px 110px, 180px 180px !important;
  background-position: 0 0, 30px 30px, 70px 80px !important;
  animation: starsTwinkle 30s linear infinite alternate !important;
}
@keyframes starsTwinkle { /* Keyframe from original */
  0% { background-position: 0 0, 30px 30px, 70px 80px; }
  100% { background-position: -50px 20px, 10px 80px, 120px 20px; }
}

/* Synthwave */
#previewContainer.bg-synthwave::before {
  background: linear-gradient(to bottom, #1e1035 0%, #4a2a70 60%, #f03d90 100%) !important;
}
#previewContainer.bg-synthwave::after { /* Using ::after for grid lines */
  content: ""; position: absolute; z-index: 1; pointer-events: none;
  top: 50%; left: 0; right: 0; bottom: 0;
  background-image: linear-gradient(to bottom, rgba(var(--accent-color-rgb, 255, 215, 0), 0.5) 1px, transparent 1px) !important;
  background-size: 100% 30px !important;
  transform: perspective(150px) rotateX(65deg) !important;
  transform-origin: center top !important;
  animation: synthGridScroll 8s linear infinite !important;
  opacity: var(--bg-opacity, 1) !important; /* Apply opacity here */
}
@keyframes synthGridScroll { /* Keyframe from original */
  from { background-position: 0 0; }
  to { background-position: 0 -60px; }
}
/* Synthwave Sun */
#previewContainer.bg-synthwave > .logo-container::before { /* Attaching sun to logo-container */
  content: ""; position: absolute; z-index: -1; /* Behind text */
  bottom: 75%; left: 50%; /* Position relative to logo */
  transform: translateX(-50%);
  width: 180px; height: 180px; border-radius: 50%;
  background: radial-gradient(circle, #fada7a 10%, #f03d90 60%, transparent 70%) !important;
  filter: blur(10px) !important;
  opacity: calc(var(--bg-opacity, 1) * 0.7) !important;
  pointer-events: none;
}

/* Matrix (Requires JS to add columns) */
#previewContainer.bg-matrix::before {
  background-color: #000 !important;
  filter: saturate(1.5) brightness(1.1) !important;
}
/* Matrix column styles are applied directly by JS helper */

/* --- Advanced Backgrounds from Enhancements --- */
#previewContainer.bg-hexagons::before {
  background-color: var(--bg-base, #1e1e1e) !important;
  --s: 50px; /* size */
  --c: var(--border-color, #444);
  background: radial-gradient(circle farthest-side at 0% 50%,#0000 95%,var(--c) 98%) 0 calc(var(--s)/2),
              radial-gradient(circle farthest-side at 50% 100%,#0000 95%,var(--c) 98%) calc(var(--s)/2) 0,
              #0000 !important;
  background-size: var(--s) var(--s) !important;
}
#previewContainer.bg-diamonds::before {
  background-color: var(--bg-base, #1e1e1e) !important;
  --s: 40px;
  --c: var(--border-subtle, rgba(68, 68, 68, 0.5));
  background: linear-gradient(135deg, #0000 calc(25% - 1px), var(--c) 25%),
              linear-gradient(-135deg, #0000 calc(25% - 1px), var(--c) 25%),
              linear-gradient(45deg, #0000 calc(25% - 1px), var(--c) 25%),
              linear-gradient(-45deg, #0000 calc(25% - 1px), var(--c) 25%) !important;
  background-size: var(--s) var(--s) !important;
  background-repeat: repeat !important;
}
#previewContainer.bg-wave-pattern::before {
  background-color: var(--bg-base, #1e1e1e) !important;
  --c: var(--border-color, #444);
  --s: 60px;
  background: radial-gradient(circle at 50% 0, #0000 19%, var(--c) 20% 21%, #0000 22%) calc(var(--s)/2) 0,
              radial-gradient(circle at 50% 100%, var(--c) 0 1%, #0000 2%) 0 calc(var(--s)/2),
              radial-gradient(circle at 0 50%, var(--c) 0 1%, #0000 2%) calc(var(--s)/2) calc(var(--s)/2),
              radial-gradient(circle at 100% 50%, #0000 19%, var(--c) 20% 21%, #0000 22%) 0 calc(var(--s)/2) !important;
  background-size: var(--s) var(--s) !important;
}
#previewContainer.bg-graph-paper::before {
  background-color: #fff !important; /* Typically light */
  --c: #ddd; /* Light lines */
  --s: 20px;
  background: linear-gradient(var(--c) 1px, #0000 1px) 0 calc(var(--s)/2),
              linear-gradient(90deg, var(--c) 1px, #0000 1px) calc(var(--s)/2) 0 !important;
  background-size: var(--s) var(--s) !important;
  body.light-mode & { --c: #eee; }
  body:not(.light-mode) & { --c: #333; background-color: #111 !important; }
}
#previewContainer.bg-gradient-pulse::before {
  background: var(--bg-base, #1e1e1e) !important;
}
#previewContainer.bg-gradient-pulse::after { /* Use ::after for overlay */
  content: ""; position: absolute; inset: 0; z-index: 1;
  background: radial-gradient(circle at center, var(--primary-color,#FF1493) 0%, transparent 70%) !important;
  opacity: calc(var(--bg-opacity, 1) * 0.5) !important;
  animation: gradientPulse 5s ease-in-out infinite !important;
  pointer-events: none; border-radius: inherit;
}
@keyframes gradientPulse { /* Keyframe from original */
  0%,100% { transform:scale(0.8);opacity:0.3; }
  50% { transform:scale(1.2);opacity:0.5; }
}
#previewContainer.bg-floating-particles::before {
  background-color: var(--bg-base,#1e1e1e) !important;
  background-image:
    radial-gradient(circle at 20% 30%, var(--primary-color,#FF1493) 1px, transparent 1px),
    radial-gradient(circle at 75% 20%, var(--secondary-color,#8A2BE2) 1px, transparent 1px),
    radial-gradient(circle at 40% 80%, var(--accent-color,#FFD700) 1px, transparent 1px),
    radial-gradient(circle at 85% 70%, var(--primary-color,#FF1493) 1px, transparent 1px),
    radial-gradient(circle at 50% 50%, var(--secondary-color,#8A2BE2) 1px, transparent 1px) !important;
  background-size: 20% 20% !important; /* Smaller size for more particles */
  opacity: calc(var(--bg-opacity, 1) * 0.5) !important;
  animation: floatingParticles 20s linear infinite !important;
}
@keyframes floatingParticles { /* Keyframe from original */
  0% { background-position:0% 0%,0% 0%,0% 0%,0% 0%,0% 0%; }
  100%{ background-position:100% 100%,120% 80%,80% 120%,90% 110%,110% 90%; } /* More movement */
}

/* ==========================================================================
   8. Responsive & Accessibility Overrides
   ========================================================================== */
/* Inherited from responsive.css or added here if specific to effects */
@media (prefers-reduced-motion: reduce) {
  /* Ensure all animations stop */
  [class*="anim-"],
  .dynamic-border.border-effect-glow-pulse,
  .dynamic-border.border-effect-neon-animated::before,
  .dynamic-border.border-effect-neon-animated::after,
  .dynamic-border.border-effect-gradient-animated::before,
  .dynamic-border.border-effect-marching-ants,
  .dynamic-border.border-effect-rotating-dash,
  .dynamic-border.border-effect-double-glow::before,
  #previewContainer.bg-gradient-animated::before,
  #previewContainer.bg-stars::before,
  #previewContainer.bg-synthwave::after,
  #previewContainer.bg-gradient-pulse::after,
  #previewContainer.bg-floating-particles::before {
    animation: none !important;
  }
}

@media (prefers-contrast: more) {
   /* Remove subtle glows/shadows. Force simpler approach. */
  .logo-text[class*="text-effect-glow-"],
  .logo-text.text-effect-shadow-soft-md,
  .logo-text.text-effect-neon-primary,
  .logo-container.dynamic-border[class*="border-effect-glow-"],
  .logo-container.dynamic-border.border-effect-neon-animated::before,
  .logo-container.dynamic-border.border-effect-neon-animated::after,
  .logo-container.dynamic-border.border-effect-double-glow::before {
    text-shadow: none !important;
    box-shadow: none !important;
    filter: none !important;
    animation: none !important;
    opacity: 1 !important;
  }
   /* Make border solid and clearly visible */
  .logo-container.dynamic-border.border-effect-glow-soft,
  .logo-container.dynamic-border.border-effect-glow-strong,
  .logo-container.dynamic-border.border-effect-glow-pulse,
  .logo-container.dynamic-border.border-effect-neon-animated,
  .logo-container.dynamic-border.border-effect-double-glow {
    border: var(--dynamic-border-width, 2px) solid var(--dynamic-border-color, currentColor) !important;
    background-image: none !important; /* Remove gradients/images */
  }
   /* Remove complex backgrounds */
  #previewContainer.bg-nebula::before,
  #previewContainer.bg-geometric-cubes::before,
  #previewContainer.bg-synthwave::before, #previewContainer.bg-synthwave::after,
  #previewContainer.bg-carbon::before,
  #previewContainer.bg-circuit::before,
  #previewContainer.bg-stars::before,
  #previewContainer.bg-matrix::before,
  #previewContainer.bg-gradient-pulse::after,
  #previewContainer.bg-floating-particles::before {
    background-image: none !important;
    background-color: Canvas !important; /* Use system background */
    opacity: 1 !important;
    animation: none !important;
  }
  #previewContainer.bg-grid::before {
    background-image: linear-gradient(CanvasText 1px, transparent 1px), linear-gradient(90deg, CanvasText 1px, transparent 1px) !important;
    background-color: Canvas !important;
  }
  #previewContainer.bg-dots-sm::before,
  #previewContainer.bg-dots-lg::before {
    background-image: radial-gradient(CanvasText 1px, transparent 1px) !important;
    background-color: Canvas !important;
  }
}

/* End of effects.css */